@model Spice.DataContarct.ViewModel.BlogViewModel
@{
    ViewBag.Title = "Search";
    Layout = "~/Views/Shared/_LayoutBackEnd.cshtml";
}

<div class="main-content">
    <div class="page-header">
        <h2 class="header-title">Vendor List</h2>
        <div class="header-sub-title">
            <nav class="breadcrumb breadcrumb-dash">
                <a href="#" class="breadcrumb-item"><i class="anticon anticon-home m-r-5"></i>Admin</a>
                <a class="breadcrumb-item" href="#">Blog</a>
                <span class="breadcrumb-item active">Search</span>
            </nav>
        </div>
    </div>
    <div class="card">
        <div class="card-body">
            <div class="row m-b-30">
                <div class="col-lg-8">
                    @*<div class="d-md-flex">
                    <div class="m-b-10 m-r-15">
                        <select class="custom-select" style="min-width: 180px;">
                            <option selected="">Vendor Name</option>
                            <option value="all">All</option>
                            <option value="homeDeco">Home Decoration</option>
                            <option value="eletronic">Eletronic</option>
                            <option value="jewellery">Jewellery</option>
                        </select>
                    </div>
                </div>*@
                </div>
                <div class="col-lg-4 text-right">
                    <a class="btn btn-primary" href="@Url.Action("Index", "Blog")">
                        <i class="anticon anticon-plus-circle m-r-5"></i>
                        <span>Add Blog</span>
                    </a>
                </div>
            </div>
            <div class="table-responsive">
                <table class="table table-hover e-commerce-table">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Blog Name</th>
                            <th>Blog Discription</th>
                            <th>Product Name</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.lst_Blog != null)
                        {
                            var count = 1;
                            foreach (var item in Model.lst_Blog)
                            {
                                <tr>
                                    <td>
                                        @count
                                    </td>
                                    <td>
                                        <div class="d-flex align-items-center">
                                            <h6 class="m-b-0 m-l-10">@item.Blog_Name</h6>
                                        </div>
                                    </td>
                                    <td>@item.Blog_Discription</td>
                                    <td>@item.ProductName</td>

                                    <td>
                                        <a class="btn btn-icon btn-hover btn-sm btn-rounded pull-right" href="@Url.Action("GetBlogById", "Blog")?Id=@item.Blog_Id">
                                            <i class="anticon anticon-edit"></i>
                                        </a>
                                        @*<a class="btn btn-icon btn-hover btn-sm btn-rounded" href="@Url.Action("DeleteVendor", "Vendor")?VendorId=@item.Id">
                                        <i class="anticon anticon-delete"></i>
                                    </a>*@
                                    </td>
                                </tr>
                                count++;
                            }
                        }
                    </tbody>
                </table>
            </div>

            <div id="myGrid" style="height: 200px; width:100%;" class="ag-theme-alpine"></div>
        </div>
    </div>
</div>
<script type="text/javascript" charset="utf-8">

    // specify the columns
    var columnDefs = [
        {
            headerName: "Blog Name", field: "Blog_Name", sortable: true, filter: true
        },
        { headerName: "Blog Discription", field: "Blog_Discription", sortable: true, filter: true },
        { headerName: "Product Name", field: "ProductName", sortable: true, filter: true },
    
    ];

    // let the grid know which columns to use
    var gridOptions = {
        columnDefs: columnDefs,
        rowSelection: 'single',
        pagination: true,
        paginationPageSize: 10,
        onRowClicked: function (event) {
            console.log('Data of row clicked', event.data); // bind this event.data to the textbox of their respective fields

        },
    };

    // lookup the container we want the Grid to use
    var eGridDiv = document.querySelector('#myGrid');

    // create the grid passing in the div to use together with the columns & data we want to use
    new agGrid.Grid(eGridDiv, gridOptions);

    agGrid.simpleHttpRequest({ url: '/Blog/GetBlogListingag' }).then(function (data) {
        gridOptions.api.setRowData(data);
    });

</script>
